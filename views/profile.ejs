<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
    <link rel="stylesheet" href="/stylesheets/footer.css" />
    <script src="https://kit.fontawesome.com/bad95817eb.js" crossorigin="anonymous"></script>


    <style>
        .collection-item {
            height: 80px;
            border: none;
            padding: 10px;
            background-color: #f5f5f5;
            border-radius: 5px;
        }

        .collection-item:hover {
            background-color: #e0e0e0;
        }

        .followbtn {
            background-color: white;
            width: 200px;
            margin: 10px;
            border: #e0e0e0;
            border-radius: 5px;
        }

        /* .followbtn:hover {} */

        .followbtn:focus {
            background-color: white;
        }

        .tab {
            color: black;
        }

        .tabs .indicator {
            background-color: #afafaf;
        }

        .tabs .tab a:focus,
        .tabs .tab a:focus.active {
            background-color: #e0e0e0;
        }

        .deleteBtn {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding: 0px 20px 15px 0px;
        }

        .deleteBtn a {
            color: black;
            text-decoration: none;
        }

        .profileSetting a {
            color: black;
            text-decoration: none;
        }
    </style>
</head>

<body>
    <%-include('nav')%>

        <div class="container">
            <div class="col s12 m6">
                <div class="card">
                    <div class="card-content center-align">
                        <!-- User Profile Picture -->
                        <img id="userProfileImage" alt="User Profile Picture" class="circle responsive-img"
                            style="width: 300px; height: 300px;">
                        <h4 class="card-title" id="userNickName">
                        </h4>


                        <button class="followbtn" id="Followers"><i class="fas fa-user-friends"></i>
                            Followers: 0</button>
                        <button class="followbtn" id="Following"><i class="fas fa-user-friends"></i>
                            Following: 0</button>
                    </div>
                    <div class="card-tabs">
                        <ul class="tabs">
                            <li class="tab white"><a href="#followers">Followers</a></li>
                            <li class="tab white"><a href="#following">Following</a></li>
                            <li class="tab white"><a href="#posts">Post</a></li>
                        </ul>
                    </div>
                    <div id="followers" class="col s12">
                        <ul class="collection" id="user-followers">
                        </ul>
                    </div>
                    <div id="following" class="col s12">
                        <ul class="collection" id="user-following">
                        </ul>
                    </div>
                    <div id="posts" class="col s12">
                        <ul class="collection" id="user-post">

                        </ul>
                    </div>
                    <!-- <div class="deleteBtn"><a href="/user/withdrawal">회원 탈퇴</a></div> -->
                </div>
            </div>
        </div>


        <div id="path-data" data-path-id="<%=path%>">
            <div id="user-container" data-user-id="<%= userId %>">
                <!-- 다른 내용들을 추가할 수 있습니다. -->
            </div>

            <%-include('footer')%>

                <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
                <script>
                    console.log("데이터 테스트")
                    let userId = document.getElementById("user-container").dataset.userId;
                    let path = document.getElementById("path-data").dataset.pathId;

                    fetch(`/api/user/${userId}`)
                        .then(response => response.json())
                        .then(data => {
                            console.log(data.data);
                            const nickName = document.getElementById('userNickName');
                            // nickName.innerHTML = `${data.data.nickName} <a href="/profileEdit"><i class="fa-solid fa-gear fa-2xs" style="color: #000000;"></i></a>`

                            nickName.innerHTML = `${data.data.nickName} 
                <div class="container mt-3" style="text-align: right; margin-top: 10px">
                    <a class="waves-effect waves-light btn grey darken-3"onclick="Follow()">팔로우</a>
                        </div>`;


                            const userImage = document.getElementById('userProfileImage');
                            userImage.src = data.data.imgUrl;
                            document.getElementById('Followers').innerHTML = `<i class="fas fa-user-friends"></i> Followers : ${data.data.followedCnt}`;
                            document.getElementById('Following').innerHTML = `<i class="fas fa-user-friends"></i> Followers : ${data.data.followerCnt}`;

                        }).catch(error => console.log(error))

                    fetch(`/api/user/${userId}/followeds`)
                        .then(response => response.json())
                        .then(data => {
                            console.log(data.data);
                            const posts = document.getElementById('user-followers');
                            data.data.forEach(e => {
                                // let listItem = document.createElement("li");
                                // listItem.classList.add("collection-item");
                                // listItem.innerHTML = `<a href="${path}post/${parseInt(e.id)}">${e.title}</a></li>`;
                                // posts.appendChild(listItem);
                            });
                        }).catch(error => console.log(error))


                    fetch(`/api/user/${userId}/followeds`)
                        .then(response => response.json())
                        .then(data => {
                            console.log(data.data);
                            const posts = document.getElementById('user-followers');
                            data.data.forEach(e => {
                                // let listItem = document.createElement("li");
                                // listItem.classList.add("collection-item");
                                // listItem.innerHTML = `<a href="${path}post/${parseInt(e.id)}">${e.title}</a></li>`;
                                // posts.appendChild(listItem);
                            });
                        }).catch(error => console.log(error))

                    fetch(`/api/user/${userId}/post`)
                        .then(response => response.json())
                        .then(data => {
                            console.log(data.data);
                            const posts = document.getElementById('user-post');
                            data.data.forEach(e => {
                                let listItem = document.createElement("li");
                                listItem.classList.add("collection-item");
                                listItem.innerHTML = `<a href="${path}post/${parseInt(e.id)}">${e.title}</a></li>`;
                                posts.appendChild(listItem);
                            });

                        }).catch(error => console.log(error))




                    document.addEventListener('DOMContentLoaded', function () {
                        M.Tabs.init(document.querySelectorAll('.tabs'));
                    });

                    function Follow() {
                        fetch(`/api/user/${userId}/follow`, {
                                method: 'PUT'
                            })
                            .then(response => response.json())
                            .then(data => {
                                console.log(data);
                                if(!data.success) {
                                    alert(data.errorMessage);
                                }
                            })
                            .catch(error => console.error('Error:', error));
                    }
                </script>

</body>

</html>